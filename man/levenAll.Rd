% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/leven.R
\name{levenAll}
\alias{levenAll}
\title{Wrapper for .C Levenshtein function}
\usage{
levenAll(
  string1,
  string2,
  homoLimit = 0,
  prepend = NULL,
  append = NULL,
  revComp = FALSE,
  align = FALSE,
  nThreads = 1
)
}
\arguments{
\item{string1}{A single string or vector of strings}

\item{string2}{Another single string or vector of strings}

\item{homoLimit}{deletions or insertions in homopolymers > homoLimit cost 0}

\item{prepend}{1 or 2 for ends-free on front of string 1 or 2}

\item{append}{1 or 2 for ends-free on back of string 1 or 2}

\item{revComp}{Should the reverse compliment of string1 also be tested and the best of identity or reverse compliment returned?}

\item{align}{Should an alignment be calculated}

\item{nThreads}{If threads >1, run nThreads threads in parallel}
}
\value{
Either a distance or if align==TRUE a list with distance and alignment
}
\description{
Align and calculate distance betweeen two strings based on Levenshtein distance with ends-free or homopolymer alignments possible (probably not called directly)
}
\references{
\url{http://en.wikipedia.org/wiki/Levenshtein_distance}
}
\author{
Scott Sherrill-Mix \email{R@sherrillmix.com}
}
